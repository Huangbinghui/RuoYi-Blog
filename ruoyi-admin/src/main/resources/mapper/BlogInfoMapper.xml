<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.blog.mapper.BlogInfoMapper">

    <resultMap type="BlogInfo" id="baseBlogInfoResult">
        <result property="id"    column="id"    />
        <result property="isDeleted"    column="is_deleted"    />
        <result property="title"    column="title"    />
        <result property="blogType"    column="blog_type"    />
        <result property="isTop"    column="is_top"    />
        <result property="authorId"    column="author_id"    />
        <result property="originalLink"    column="original_link"    />
        <result property="isOriginal"    column="is_original"    />
        <result property="isPrivate"    column="is_private"    />
        <result property="version"    column="version"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <resultMap id="BlogInfoResult" type="BlogInfo" extends="baseBlogInfoResult">
        <association property="blog" column="id" resultMap="BlogResult" />
    </resultMap>

    <resultMap type="Blog" id="BlogResult">
        <result property="infoId"    column="info_id"    />
        <result property="content"    column="content"    />
    </resultMap>

    <sql id="selectBlogInfoVo">
        select id, is_deleted, title, blog_type, is_top, author_id, original_link, is_original, is_private, version, create_by, create_time, update_by, update_time from rm_blog_info
    </sql>

    <select id="selectBlogInfoList" parameterType="BlogInfo" resultMap="BlogInfoResult">
        <include refid="selectBlogInfoVo"/>
        <where>
            <if test="isDeleted != null "> and is_deleted = #{isDeleted}</if>
            <if test="title != null  and title != ''"> and title like concat('%', #{title}, '%')</if>
            <if test="blogType != null "> and blog_type = #{blogType}</if>
            <if test="isTop != null "> and is_top = #{isTop}</if>
            <if test="authorId != null "> and author_id = #{authorId}</if>
            <if test="originalLink != null  and originalLink != ''"> and original_link = #{originalLink}</if>
            <if test="isOriginal != null "> and is_original = #{isOriginal}</if>
            <if test="isPrivate != null "> and is_private = #{isPrivate}</if>
            <if test="version != null  and version != ''"> and version = #{version}</if>
        </where>
    </select>

    <select id="selectBlogInfoById" parameterType="Long" resultMap="BlogInfoResult">
        select a.id, a.is_deleted, a.title, a.blog_type, a.is_top, a.author_id, a.original_link, a.is_original, a.is_private, a.version, a.create_by, a.create_time, a.update_by, a.update_time,
               b.info_id as info_id, b.content as content
        from rm_blog_info a
                 left join rm_blog b on b.info_id = a.id
        where a.id = #{id}
    </select>

    <insert id="insertBlogInfo" parameterType="BlogInfo">
        insert into rm_blog_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="isDeleted != null">is_deleted,</if>
            <if test="title != null">title,</if>
            <if test="blogType != null">blog_type,</if>
            <if test="isTop != null">is_top,</if>
            <if test="authorId != null">author_id,</if>
            <if test="originalLink != null">original_link,</if>
            <if test="isOriginal != null">is_original,</if>
            <if test="isPrivate != null">is_private,</if>
            <if test="version != null">version,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="isDeleted != null">#{isDeleted},</if>
            <if test="title != null">#{title},</if>
            <if test="blogType != null">#{blogType},</if>
            <if test="isTop != null">#{isTop},</if>
            <if test="authorId != null">#{authorId},</if>
            <if test="originalLink != null">#{originalLink},</if>
            <if test="isOriginal != null">#{isOriginal},</if>
            <if test="isPrivate != null">#{isPrivate},</if>
            <if test="version != null">#{version},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateBlogInfo" parameterType="BlogInfo">
        update rm_blog_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
            <if test="title != null">title = #{title},</if>
            <if test="blogType != null">blog_type = #{blogType},</if>
            <if test="isTop != null">is_top = #{isTop},</if>
            <if test="authorId != null">author_id = #{authorId},</if>
            <if test="originalLink != null">original_link = #{originalLink},</if>
            <if test="isOriginal != null">is_original = #{isOriginal},</if>
            <if test="isPrivate != null">is_private = #{isPrivate},</if>
            <if test="version != null">version = #{version},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBlogByInfoId" parameterType="Long">
        delete from rm_blog where info_id = #{infoId}
    </delete>

    <insert id="batchBlog">
        insert into rm_blog( info_id, content) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.infoId}, #{item.content})
        </foreach>
    </insert>
</mapper>